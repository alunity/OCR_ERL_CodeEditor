name: build-and-release

on:
  push:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest']

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.11

    - run: pip install -r requirements.txt pyinstaller
    - run: pyinstaller main.py --onefile -w
    - run: pyinstaller interpreter/interpreter.py --onefile

  zip-files:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: vimtor/action-zip@v1.1
        with:
          files: dist/interpreter.exe dist/main.exe assets/
          dest: build.zip

  release:
    needs: [build, zip-files]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - uses: rickstaa/action-create-tag@v1
      id: tag_create
      with:
        tag: "latest"
        tag_exists_error: false
        message: "Latest release"
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ steps.tag_create.outputs.tag_exists }}
        release_name: ${{ steps.tag_create.outputs.tag_exists }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./
        asset_name: build.zip
        asset_content_type: application/zip
  
