name: compile

on:
  push:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest']

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.11

    - run: pip install -r requirements.txt pyinstaller
    - run: pyinstaller main.py --onefile -w
    - run: pyinstaller interpreter/interpreter.py --onefile
    # - uses: actions/upload-artifact@v2
    #   with:
    #     name: main.exe
    #     path: dist/main.exe
    # - uses: actions/upload-artifact@v2
    #   with:
    #     name: interpreter.exe
    #     path: dist/interpreter.exe
    # - uses: actions/upload-artifact@v2
    #   with:
    #     name: assets
    #     path: assets

  download-and-archive:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v2

    - name: Install zip
      run: sudo apt-get install zip

    - name: Archive Artifacts
      run: |
        mkdir archive
        zip -r archive/build.zip dist/main.exe dist/interpreter.exe assets

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: archive/build.zip

  release:
    needs: [build, download-and-archive]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download workflow run artifact
      uses: actions/download-artifact@v2
      with:
        name: build

    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: v${{ env.RELEASE_VERSION}}
        release_name: v${{ env.RELEASE_VERSION}}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./build.zip
        asset_name: build.zip
        asset_content_type: application/zip
  
